{
  "swagger": "2.0",
  "info": {
    "description": "API Portafolio Web",
    "version": "1.0.0",
    "title": "Portfolio API",
    "contact": {
      "email": "cramirezc@elektra.com.mx"
    }
  },
  "host": "10.54.36.89:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Customer",
      "description": "Customer information",
      "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/customer/detail/concact": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Return Customer Contact",
        "description": "Resturn Customer Contact",
        "operationId": "getCustomerContact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "Country of Unique Customer",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Channel of Unique Customer",
            "required": true,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "description": "Branch of Unique Customer",
            "required": true,
            "type": "string"
          },
          {
            "name": "folio",
            "in": "query",
            "description": "Folio of Unique Customer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Contact"
            },
            "headers": {
              "correlationId": {
                "type": "string",
                "description": "Identifier of the transaction in the service."
              }
            }
          },
          "400": {
            "description": "Malformed schema",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "correlationId": {
                "type": "string",
                "description": "Identifier of the transaction in the service."
              }
            }
          },
          "404": {
            "description": "An error occurred in the query",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "correlationId": {
                "type": "string",
                "description": "Identifier of the transaction in the service."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new Customer Contact",
        "description": "The service insert new Contact of customer",
        "operationId": "postCustomerContact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Contact",
            "description": "Object contact customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Confirm"
            },
            "headers": {
              "correlationId": {
                "type": "string",
                "description": "Identifier of the transaction in the service."
              }
            }
          },
          "400": {
            "description": "Malformed schema",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "correlationId": {
                "type": "string",
                "description": "Identifier of the transaction in the service."
              }
            }
          },
          "404": {
            "description": "An error occurred in the query",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "correlationId": {
                "type": "string",
                "description": "Identifier of the transaction in the service."
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "UniqueCustomer": {
      "type": "object",
      "properties": {
        "country": {
          "type": "number",
          "description": "Country"
        },
        "channel": {
          "type": "number",
          "description": "Channel"
        },
        "branch": {
          "type": "number",
          "description": "Branch"
        },
        "folio": {
          "type": "number",
          "description": "Folio"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "uniqueCustomer": {
          "$ref": "#/definitions/UniqueCustomer"
        },
        "phone": {
          "type": "string",
          "description": "phone"
        },
        "email": {
          "type": "string",
          "description": "email"
        }
      }
    },
    "Confirm": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "Confirmation code"
        },
        "message": {
          "type": "string",
          "description": "Message error or Exeption"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "Confirmation code"
        },
        "message": {
          "type": "string",
          "description": "Message error or Exeption"
        }
      }
    },
    "Errors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}